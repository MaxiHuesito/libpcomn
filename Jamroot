#-*- mode: jam; jam-indent-size: 2; tab-width: 2; indent-tabs-mode: nil; -*-
#------------------------------------------------------------------------------
# FILE         :  Jamroot
# COPYRIGHT    :  Yakov Markovitch, 2008-2016. All rights reserved.
#                 See LICENSE for information on usage/redistribution.
#
# DESCRIPTION  :  Boost.Build v2 script for building pcommon libraries.
#
# CREATION DATE:  19 Jan 2008
#------------------------------------------------------------------------------
import modules ;
import regex ;
import path ;
import errors ;
import string ;
import os ;
import notfile ;
import feature ;

################################################################################
# Project root path
################################################################################
path-constant ROOTPATH   : . ;

################################################################################
# Load the module pcommon: after this point all custom global rules are
# available (prod, expand, etc.)
################################################################################
# Provide load path for 'pcommon' module
modules.poke : BOOST_BUILD_PATH : [ modules.peek : BOOST_BUILD_PATH ] $(ROOTPATH)/pcommon/config ;

import pcommon ;

################################################################################
# Constants
################################################################################
constant PROJROOT  : /libpcomn ;
constant PROJSHARE : /libpcomn ;

path-constant SHAREPATH : . ;

constant BUILD_HOST : [ pcommon.build-host ] ;

constant LF : [ modules.peek : LF ] ;

################################################################################
# Vendor libraries
################################################################################
lib cppunit : : <os>LINUX <os>LINUX:<link>shared ;
lib cppunit : : <os>NT <os>NT:<link>static ;
lib cppunit : : <os>NT <os>NT:<link>static <variant>debug <name>cppunitd ;

lib ncurses : : <link>shared ;
lib crypto  : : <link>shared ;

lib readline  : : <os>LINUX <os>LINUX:<link>shared : : <library>ncurses ;
lib readline : : <os>NT <name>editline ;
lib readline : : <os>NT <variant>debug <name>editlined ;

################################################################################
# Project
################################################################################
project libpcomn
  : requirements

  # pcommon everywhere, include pcommon headers w/o prefix, like <pcomn_util.h>
  <include>$(SHAREPATH)/pcommon
  # Include headers of all other our libraries with corresponding prefix,
  # like <pcomn_net/netsockets.h>
  <include>$(SHAREPATH)

  <threading>multi

  # GCC-specific compiler flags for all build variants
  [ conditional <toolset>gcc :

  <cflags>-march=corei7

  <cflags>-Wno-unused-local-typedefs
  <cxxflags>-Woverloaded-virtual
  <cflags>-fvisibility=hidden ]

  # GCC-specific compiler flags for release builds
  [ conditional <toolset>gcc,<variant-tag>release :

  <cxxflags>-fno-implement-inlines ]

  <toolset>msvc:<define>_SCL_SECURE_NO_WARNINGS
  <toolset>msvc:<define>_CRT_SECURE_NO_WARNINGS

  <define>BUILD_HOST="\"$(BUILD_HOST)\""

  : default-build debug <link>static <threading>multi
  ;

################################################################################
# Libraries
################################################################################
# Adding global alias for the project that buiilds all unittests at once
use-project unittests  : ./unittests ;

# Adding global aliases for all libraries
rule proj-lib ( name : dir ? )
{
  dir ?= $(name) ;
  alias $(name) : $(dir)//$(name) : <link>static ;
  explicit $(name) ;
}

proj-lib pcommon ;

proj-lib pcomn_journal ;
proj-lib pcomn_http ;
proj-lib pcomn_net ;
proj-lib pcomn_shell ;
proj-lib pcomn_ssl ;
proj-lib pcomn_cmdline ;
